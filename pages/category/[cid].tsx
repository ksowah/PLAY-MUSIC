/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable @next/next/no-img-element */
import PopOver from "../../components/PopOver";
import Head from "next/head";
import { useRouter } from "next/router";
import AudioControl from "../../components/AudioControl";
import { useEffect, useState } from "react";
import axios from "../../utils/axios";
import { NextPage } from "next";
import { useRecoilState } from "recoil";		
import { sessionState, tokenState, tracks } from "../../atoms/userAtom";


const Category: NextPage = () => {
	const router = useRouter()
	const [token, setToken] = useRecoilState(tokenState)
  	const [session, setSession] = useRecoilState(sessionState)
	const [allTracks, setAllTracks] = useRecoilState(tracks)

	const { image } = router.query;

	const getSongs = async (token_sub: string) => {		
		try {

					const { data } = await axios({
						url: "songs",
						method: "GET",
						headers: {
							Authorization : `Bearer ${token_sub}`, 
						  },
					})
					setAllTracks(data?.reverse())
			
		} catch (error) {
			console.log(error);
			
		}
		
	}

	const refreshToken = async () => {
		try {
		 await axios({
			url: "refresh",
			method: "GET",

		  })
		  .then((response) => {
			getSongs(response?.data?.token)
			setToken(response?.data?.token)
			setSession(response.data.user)
		})

		  console.log("Token generated 🪝");

		} catch (error: any) {
		  console.log(error)      
		}
	  }
	
	
	  useEffect(() => {
		refreshToken()
		if (localStorage.getItem("session") === "active") {
		  setInterval( () => {
			refreshToken()
			console.log("session updated 🔥🔥")
		  }, 4 * 60 * 1000) // every 4 mins
		}
	  }, [])
	

	return (
		<div className="min-h-screen bg-[#030303] text-gray-50">
			<Head>
				<title>Discover</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div className="py-[4rem] px-[1rem] md:px-[6rem]">
				<p className="font-medium">TSIB</p>
				<div className="m-8 md:m-28 md:mx-44">
					<img src={image?.toString()} alt="cover" />
				</div>

				<h1 className="text-center font-medium my-12">PRODUCTIVE TEAM</h1>
				<PopOver />
			</div>

			<div className="pb-20">
				{
					allTracks.map((track: any, idx: any) => (
						<AudioControl key={idx} artist={track.artist} song={track.track} title={track.title} image={track.image} />
					))
				}
			</div>
		</div>
	);
};

export default Category;

